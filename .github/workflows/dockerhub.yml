name: Docker Image, Tags and Release

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Image Manual Tag'
        required: false

jobs:
  build-and-push:
    name: Build and Push Docker Image, Create Tag and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'

      - name: Get Branch Name
        id: get_branch
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

      - name: Get Commit SHA
        id: get_sha
        run: echo "commit_sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Tag
        id: set_tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/cd-cd-phase-2" ]; then
            VERSION=$(jq -r .version < package.json)
            if [[ ! "$VERSION" =~ ^v?([0-9]+)\.([0-9]+)\.([0-9]+)(-[A-Za-z0-9-.]+)?(\+[A-Za-z0-9-.]+)?$ ]]; then
              echo "Invalid version format in package.json. Must follow SemVer."
              exit 1
            fi
            TAGS="${{ steps.get_branch.outputs.branch }},${{ steps.get_sha.outputs.commit_sha }},v${VERSION}"
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          else
            TAGS="${{ steps.get_branch.outputs.branch }},${{ steps.get_sha.outputs.commit_sha }}"
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker Image
        run: |
          IFS=',' read -r -a TAG_ARRAY <<< "${{ steps.set_tag.outputs.tags }}"
          for tag in "${TAG_ARRAY[@]}"; do
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${tag} .
          done

      - name: Push Docker Image
        run: |
          IFS=',' read -r -a TAG_ARRAY <<< "${{ steps.set_tag.outputs.tags }}"
          for tag in "${TAG_ARRAY[@]}"; do
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${tag}
          done

      - name: Create GitHub Release and Tag (Main Branch Only)
        if: github.ref == 'refs/heads/cd-cd-phase-2'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v$(jq -r .version < package.json)
          release_name: Release v$(jq -r .version < package.json)
          body: 'Release version $(jq -r .version < package.json)'
          draft: false
          prerelease: false
