name: Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and push Docker Image, create Release and Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'

      - name: Set Branch Name
        id: set_branch
        run: echo "branch='main'" >> $GITHUB_OUTPUT

      - name: Set Commit SHA
        id: set_sha
        run: echo "commit_sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Set Tags
        id: set_tags
        run: |
          VERSION=$(node -p "require('./package.json').version" | tr -d ' \n')

          BRANCH_TAG="${{ steps.set_branch.outputs.branch }}"
          COMMIT_TAG="${{ steps.set_sha.outputs.commit_sha }}"
          VERSION_TAG="v$VERSION"
          TAGS="$BRANCH_TAG,$COMMIT_TAG,$VERSION_TAG"

          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Debug Tags
        run: |
          echo "Branch Tag: ${{ steps.set_branch.outputs.branch }}"
          echo "Commit Tag: ${{ steps.set_sha.outputs.commit_sha }}"
          echo "Version Tag: ${{ steps.set_tags.outputs.version_tag }}"
          echo "All Tags: ${{ steps.set_tags.outputs.tags }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          IFS=',' read -r -a TAG_ARRAY <<< "${{ steps.set_tags.outputs.tags }}"
          for tag in "${TAG_ARRAY[@]}"; do
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:$tag .
          done

      - name: Push Docker Image
        run: |
          IFS=',' read -r -a TAG_ARRAY <<< "${{ steps.set_tags.outputs.tags }}"
          for tag in "${TAG_ARRAY[@]}"; do
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:$tag
          done

      - name: Create GitHub Release and Tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tags.outputs.version_tag }}
          release_name: Release ${{ steps.set_tags.outputs.version_tag }}
          body: 'Release version ${{ steps.set_tags.outputs.version_tag }}'
          draft: false
          prerelease: false
